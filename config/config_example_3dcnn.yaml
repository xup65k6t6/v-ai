# Example configuration file for 3D CNN training
# Copy this file and modify for your own training

# Dataset configuration
samples_base: "./data/videos"  # Base directory containing video samples
checkpoint_dir: "./checkpoints"  # Directory to save model checkpoints

# Video IDs for train/val/test split
# Modify these based on your dataset
train_ids: [1, 3, 6, 7, 10, 13, 15, 16, 18, 22, 23, 31, 32, 36, 38, 39, 40, 41, 42, 48, 50, 52, 53, 54]
val_ids: [0, 2, 8, 12, 17, 19, 24, 26, 27, 28, 30, 33, 46, 49, 51]
test_ids: [4, 5, 9, 11, 14, 20, 21, 25, 29, 34, 35, 37, 43, 44, 45, 47]

# Training parameters
num_epochs: 50  # Total number of training epochs
batch_size: 8  # Batch size (reduce if GPU memory issues)
learning_rate: 0.0001  # Initial learning rate
patience: 10  # Early stopping patience (epochs without improvement)
num_workers: 4  # Number of data loading workers

# Logging configuration
wandb_project: "volleyball_group_activity"  # Weights & Biases project name
wandb_run_name: "3dcnn_volleyball"  # Name for this specific run

# Video processing parameters
window_before: 3  # Number of frames before the key frame
window_after: 4  # Number of frames after the key frame
# Total sequence length = window_before + 1 + window_after = 8 frames

image_size: 320  # Size to resize images (height and width)

# Model configuration
model_type: "3d_cnn"  # Model architecture type
pretrained: true  # Use pretrained ResNet3D backbone

# Scheduler configuration (optional)
scheduler_patience: 2  # Patience for learning rate reduction
